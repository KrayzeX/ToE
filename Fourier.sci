function result = Fourier()
//Определение интервала времени
T=10; dt=1; 
t=-T:dt:T;
N=length(t);
//задаём сигнал
A = 10; s = A*(1-abs(t)/T); 
//добавляем нули, увеличивая частотное разрешение
Signal = [zeros(1,2*N) s zeros(1,2*N)] 
//определяем частотную шкалу
df = 1/length(Signal)
Fmax = 1/dt 
f = -(Fmax-df)/2:df:Fmax/2;
//вычисление ДПФ
Y = dft(Signal,1);
//сдвиг ДПФ
//сдвиг нужен, т.к. dft устроен так, что перебирает положительные и отрицательные частоты, 
//поэтому правая часть будет зеркальным отражением действительного спектра
//т.е. 0 должен быть посередине массива,поэтому совершаем циклический сдвиг
Yp = fftshift(Y);
//Построение графика сигнала
figure(1)
subplot(3,1,1)
plot(t,s)
title('Сигнал')
//Построение спектров
subplot(3,1,2)
plot(f,abs(Yp))
title('Ампплитудный спектр')
xgrid
subplot(3,1,3)
plot(f,atan(imag(Yp),real(Yp)))
title('Фазовый спектр')
xlabel('Частота, Гц')
xgrid
endfunction

